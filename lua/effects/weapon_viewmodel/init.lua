EFFECT.AutomaticFrameAdvance = truefunction EFFECT:Init(data)	local ent = data:GetEntity()	self.Weapon = ent.Weapon	self.Owner = ent.Owner	self.Entity:SetModel( self.Weapon.ViewModel )	self.LastRender = CurTime()endfunction EFFECT:Think()	if self.Weapon and self.Entity:IsValid() then		self.Entity:SetRenderBoundsWS(LocalPlayer():GetPos()+LocalPlayer():OBBMins(),LocalPlayer():GetPos()+LocalPlayer():OBBMaxs())				self.Entity:NextThink(CurTime())		return true	end	return false --dieendfunction EFFECT:Render()	self.LastRender = self.LastRender or CurTime()	self.Entity:FrameAdvance(CurTime() - self.LastRender)	self.LastRender = CurTime()		local myAng, myPos = EyeAngles(), EyePos()	if self.Weapon:GetSequence() == 9 and self.Weapon:DefaultReload(ACT_VM_RELOAD) then		return	end	local vm = LocalPlayer():GetViewModel()	if vm:GetSequence() ~= self.Entity:GetSequence() then		self.Entity:ResetSequence(vm:GetSequence())		--self.Entity:SetAnimation(vm:GetSequence())	end	local angDiff = myAng:Difference(vm:GetAngles())	local posDiff = vm:GetPos() - myPos	self.Entity:SetAngles(myAng - Angle(angDiff.p,-1*angDiff.y,0))	self.Entity:SetPos(myPos - posDiff)	self.Entity:DrawModel()end